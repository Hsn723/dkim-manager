name: main
on:
  push:
    branches:
      - '**'
    tags-ignore:
      - '*'
env:
  go-version: 1.17
jobs:
  build:
    name: Build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.go-version }}
      - name: Test
        run: make build
  lint:
    name: Lint
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: actions/setup-python@v4
      - name: Setup go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.go-version }}
      - name: Lint
        run: make lint
  check-goreleaser-config:
    name: Check goreleaser.yml
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.go-version }}
      - uses: goreleaser/goreleaser-action@v3
        with:
          version: latest
          args: check -f .goreleaser.yml
  test:
    name: Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.go-version }}
      - name: Test
        run: make test
  e2e:
    name: End-to-End Tests
    strategy:
      matrix:
        k8s-version: ['1.21.2', '1.22.4', '1.23.1']
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v3
    - uses: actions/setup-go@v3
      with:
        go-version: ${{ env.go-version }}
    - run: make start KUBERNETES_VERSION=${{ matrix.k8s-version }}
      working-directory: e2e
    - run: make test
      working-directory: e2e
  dry-run:
    name: Dry-run release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - uses: docker/setup-qemu-action@v2
      - uses: docker/setup-buildx-action@v2
      - uses: anchore/sbom-action/download-syft@v0.11.0
      - name: Setup go
        uses: actions/setup-go@v3
        with:
          go-version: ${{ env.go-version }}
      - name: Setup latest version tag
        run: |
          echo "GORELEASER_CURRENT_TAG=$(git describe --tags --abbrev=0 --match "v*" || echo v0.0.0)" >> $GITHUB_ENV
      - name: GoReleaser
        uses: goreleaser/goreleaser-action@v3
        with:
          version: latest
          args: --snapshot --skip-sign --skip-publish --rm-dist
      - name: Test built containers
        run: make container-structure-test
  tag:
    name: Tag release
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    needs: [build, lint, check-goreleaser-config, test, dry-run, e2e]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
        with:
          token: ${{ secrets.PAT }}
      - name: Tag release
        run: |
          TAG="v$(cat VERSION)"
          git tag ${TAG}
          git push origin ${TAG} || true
