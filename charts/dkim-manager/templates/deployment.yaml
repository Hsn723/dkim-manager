apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ template "project.fullname" . }}-controller-manager
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/component: controller
    {{- include "project.labels" . | nindent 4 }}
spec:
  replicas: {{ .Values.controller.replicas }}
  selector:
    matchLabels:
      app.kubernetes.io/component: controller
      app.kubernetes.io/name: {{ include "project.name" . }}
  template:
    metadata:
      labels:
        app.kubernetes.io/component: controller
        app.kubernetes.io/name: {{ include "project.name" . }}
    spec:
      containers:
        - name: manager
          image: "{{ .Values.image.repository }}:{{ default .Chart.AppVersion .Values.image.tag }}"
          {{- with .Values.image.pullPolicy }}
          imagePullPolicy: {{ . }}
          {{- end }}
          {{- with .Values.controller.extraArgs }}
          args: {{ . }}
          {{- end }}
          ports:
            - containerPort: 9443
              name: webhook-server
              protocol: TCP
            - containerPort: 8081
              name: health
              protocol: TCP
            - containerPort: 8080
              name: metrics
              protocol: TCP
          {{- with .Values.controller.resources }}
          resources: {{ toYaml . | nindent 12 }}
          {{- end }}
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
          env:
            - name: POD_NAMESPACE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.namespace
          livenessProbe:
            httpGet:
              path: /healthz
              port: health
            initialDelaySeconds: 15
            periodSeconds: 20
          readinessProbe:
            httpGet:
              path: /readyz
              port: health
            initialDelaySeconds: 5
            periodSeconds: 10
          volumeMounts:
            - mountPath: /tmp/k8s-webhook-server/serving-certs
              name: cert
              readOnly: true
      securityContext:
        runAsNonRoot: true
      serviceAccountName: {{ template "project.fullname" . }}-controller-manager
      terminationGracePeriodSeconds: {{ .Values.controller.terminationGracePeriodSeconds }}
      volumes:
        - name: cert
          secret:
            defaultMode: 420
            secretName: webhook-server-cert
